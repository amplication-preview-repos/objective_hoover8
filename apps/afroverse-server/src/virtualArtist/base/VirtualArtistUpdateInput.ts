/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiStudioUpdateManyWithoutVirtualArtistsInput } from "./AiStudioUpdateManyWithoutVirtualArtistsInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { EnumVirtualArtistGenre } from "./EnumVirtualArtistGenre";
import { MusicChallengeUpdateManyWithoutVirtualArtistsInput } from "./MusicChallengeUpdateManyWithoutVirtualArtistsInput";
import { RecordLabelUpdateManyWithoutVirtualArtistsInput } from "./RecordLabelUpdateManyWithoutVirtualArtistsInput";
import { VoiceCustomizationWhereUniqueInput } from "../../voiceCustomization/base/VoiceCustomizationWhereUniqueInput";

@InputType()
class VirtualArtistUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AiStudioUpdateManyWithoutVirtualArtistsInput,
  })
  @ValidateNested()
  @Type(() => AiStudioUpdateManyWithoutVirtualArtistsInput)
  @IsOptional()
  @Field(() => AiStudioUpdateManyWithoutVirtualArtistsInput, {
    nullable: true,
  })
  aiStudios?: AiStudioUpdateManyWithoutVirtualArtistsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumVirtualArtistGenre,
  })
  @IsEnum(EnumVirtualArtistGenre)
  @IsOptional()
  @Field(() => EnumVirtualArtistGenre, {
    nullable: true,
  })
  genre?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => MusicChallengeUpdateManyWithoutVirtualArtistsInput,
  })
  @ValidateNested()
  @Type(() => MusicChallengeUpdateManyWithoutVirtualArtistsInput)
  @IsOptional()
  @Field(() => MusicChallengeUpdateManyWithoutVirtualArtistsInput, {
    nullable: true,
  })
  musicChallenges?: MusicChallengeUpdateManyWithoutVirtualArtistsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RecordLabelUpdateManyWithoutVirtualArtistsInput,
  })
  @ValidateNested()
  @Type(() => RecordLabelUpdateManyWithoutVirtualArtistsInput)
  @IsOptional()
  @Field(() => RecordLabelUpdateManyWithoutVirtualArtistsInput, {
    nullable: true,
  })
  recordLabels?: RecordLabelUpdateManyWithoutVirtualArtistsInput;

  @ApiProperty({
    required: false,
    type: () => VoiceCustomizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoiceCustomizationWhereUniqueInput)
  @IsOptional()
  @Field(() => VoiceCustomizationWhereUniqueInput, {
    nullable: true,
  })
  voiceCustomization?: VoiceCustomizationWhereUniqueInput | null;
}

export { VirtualArtistUpdateInput as VirtualArtistUpdateInput };
