/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiStudioListRelationFilter } from "../../aiStudio/base/AiStudioListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumVirtualArtistGenre } from "./EnumVirtualArtistGenre";
import { StringFilter } from "../../util/StringFilter";
import { MusicChallengeListRelationFilter } from "../../musicChallenge/base/MusicChallengeListRelationFilter";
import { RecordLabelListRelationFilter } from "../../recordLabel/base/RecordLabelListRelationFilter";
import { VoiceCustomizationWhereUniqueInput } from "../../voiceCustomization/base/VoiceCustomizationWhereUniqueInput";

@InputType()
class VirtualArtistWhereInput {
  @ApiProperty({
    required: false,
    type: () => AiStudioListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AiStudioListRelationFilter)
  @IsOptional()
  @Field(() => AiStudioListRelationFilter, {
    nullable: true,
  })
  aiStudios?: AiStudioListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumVirtualArtistGenre,
  })
  @IsEnum(EnumVirtualArtistGenre)
  @IsOptional()
  @Field(() => EnumVirtualArtistGenre, {
    nullable: true,
  })
  genre?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MusicChallengeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MusicChallengeListRelationFilter)
  @IsOptional()
  @Field(() => MusicChallengeListRelationFilter, {
    nullable: true,
  })
  musicChallenges?: MusicChallengeListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => RecordLabelListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecordLabelListRelationFilter)
  @IsOptional()
  @Field(() => RecordLabelListRelationFilter, {
    nullable: true,
  })
  recordLabels?: RecordLabelListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => VoiceCustomizationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoiceCustomizationWhereUniqueInput)
  @IsOptional()
  @Field(() => VoiceCustomizationWhereUniqueInput, {
    nullable: true,
  })
  voiceCustomization?: VoiceCustomizationWhereUniqueInput;
}

export { VirtualArtistWhereInput as VirtualArtistWhereInput };
