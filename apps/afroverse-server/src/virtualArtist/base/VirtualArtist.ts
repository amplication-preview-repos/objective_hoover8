/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiStudio } from "../../aiStudio/base/AiStudio";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumVirtualArtistGenre } from "./EnumVirtualArtistGenre";
import { MusicChallenge } from "../../musicChallenge/base/MusicChallenge";
import { RecordLabel } from "../../recordLabel/base/RecordLabel";
import { VoiceCustomization } from "../../voiceCustomization/base/VoiceCustomization";

@ObjectType()
class VirtualArtist {
  @ApiProperty({
    required: false,
    type: () => [AiStudio],
  })
  @ValidateNested()
  @Type(() => AiStudio)
  @IsOptional()
  aiStudios?: Array<AiStudio>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumVirtualArtistGenre,
  })
  @IsEnum(EnumVirtualArtistGenre)
  @IsOptional()
  @Field(() => EnumVirtualArtistGenre, {
    nullable: true,
  })
  genre?: "Option1" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [MusicChallenge],
  })
  @ValidateNested()
  @Type(() => MusicChallenge)
  @IsOptional()
  musicChallenges?: Array<MusicChallenge>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [RecordLabel],
  })
  @ValidateNested()
  @Type(() => RecordLabel)
  @IsOptional()
  recordLabels?: Array<RecordLabel>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => VoiceCustomization,
  })
  @ValidateNested()
  @Type(() => VoiceCustomization)
  @IsOptional()
  voiceCustomization?: VoiceCustomization | null;
}

export { VirtualArtist as VirtualArtist };
